### YamlMime:UniversalReference
items:
    - uid: cloud.google.com/go/storage/experimental
      name: cloud.google.com/go/storage/experimental
      id: experimental
      summary: |
        <p>Package experimental is a collection of experimental features that might
        have some rough edges to them. Housing experimental features in this package
        results in a user accessing these APIs as `experimental.Foo`, thereby making
        it explicit that the feature is experimental and using them in production
        code is at their own risk.
        <p>All APIs in this package are experimental.
      type: package
      langs:
        - go
      children:
        - cloud.google.com/go/storage/experimental.ReadStallTimeoutConfig
        - cloud.google.com/go/storage/experimental.WithGRPCBidiReads
        - cloud.google.com/go/storage/experimental.WithMetricExporter
        - cloud.google.com/go/storage/experimental.WithMetricInterval
        - cloud.google.com/go/storage/experimental.WithReadStallTimeout
      alt_link: https://pkg.go.dev/cloud.google.com/go/storage/experimental
    - uid: cloud.google.com/go/storage/experimental.ReadStallTimeoutConfig
      name: ReadStallTimeoutConfig
      id: ReadStallTimeoutConfig
      summary: |
        ReadStallTimeoutConfig defines the timeout which is adjusted dynamically based on
        past observed latencies.
      parent: cloud.google.com/go/storage/experimental
      type: type
      langs:
        - go
      syntax:
        content: |-
            type ReadStallTimeoutConfig struct {
            	// Min is the minimum duration of the timeout. The default value is 500ms. Requests
            	// taking shorter than this value to return response headers will never time out.
            	// In general, you should choose a Min value that is greater than the typical value
            	// for the target percentile.
            	Min <a href="https://pkg.go.dev/time">time</a>.<a href="https://pkg.go.dev/time#Duration">Duration</a>

            	// TargetPercentile is the percentile to target for the dynamic timeout. The default
            	// value is 0.99. At the default percentile, at most 1% of requests will be timed out
            	// and retried.
            	TargetPercentile <a href="https://pkg.go.dev/builtin#float64">float64</a>
            }
    - uid: cloud.google.com/go/storage/experimental.WithGRPCBidiReads
      name: |
        func WithGRPCBidiReads
      id: WithGRPCBidiReads
      summary: |
        WithGRPCBidiReads provides an [option.ClientOption] that may be passed to
        [cloud.google.com/go/storage.NewGRPCClient].
        It enables the client to use bi-directional gRPC APIs for downloads rather than the
        server streaming API. In particular, it allows users to use the [storage.MultiRangeDownloader]
        surface, which requires bi-directional streaming.

        The bi-directional API is in private preview; please contact your account manager if
        interested.
      parent: cloud.google.com/go/storage/experimental
      type: function
      langs:
        - go
      syntax:
        content: func WithGRPCBidiReads() <a href="https://pkg.go.dev/google.golang.org/api/option">option</a>.<a href="https://pkg.go.dev/google.golang.org/api/option#ClientOption">ClientOption</a>
    - uid: cloud.google.com/go/storage/experimental.WithMetricExporter
      name: |
        func WithMetricExporter
      id: WithMetricExporter
      summary: |
        WithMetricExporter provides a [option.ClientOption] that may be passed to [storage.NewGRPCClient].
        Set an alternate client-side metric Exporter to emit metrics through.
        Must implement [metric.Exporter]
      parent: cloud.google.com/go/storage/experimental
      type: function
      langs:
        - go
      syntax:
        content: func WithMetricExporter(ex *<a href="https://pkg.go.dev/go.opentelemetry.io/otel/sdk/metric">metric</a>.<a href="https://pkg.go.dev/go.opentelemetry.io/otel/sdk/metric#Exporter">Exporter</a>) <a href="https://pkg.go.dev/google.golang.org/api/option">option</a>.<a href="https://pkg.go.dev/google.golang.org/api/option#ClientOption">ClientOption</a>
    - uid: cloud.google.com/go/storage/experimental.WithMetricInterval
      name: |
        func WithMetricInterval
      id: WithMetricInterval
      summary: |
        WithMetricInterval provides a [option.ClientOption] that may be passed to [storage.NewGRPCClient].
        It sets how often to emit metrics [metric.WithInterval] when using
        [metric.NewPeriodicReader]
        When using Cloud Monitoring interval must be at minimum 1 [time.Minute].
      parent: cloud.google.com/go/storage/experimental
      type: function
      langs:
        - go
      syntax:
        content: func WithMetricInterval(metricInterval <a href="https://pkg.go.dev/time">time</a>.<a href="https://pkg.go.dev/time#Duration">Duration</a>) <a href="https://pkg.go.dev/google.golang.org/api/option">option</a>.<a href="https://pkg.go.dev/google.golang.org/api/option#ClientOption">ClientOption</a>
    - uid: cloud.google.com/go/storage/experimental.WithReadStallTimeout
      name: |
        func WithReadStallTimeout
      id: WithReadStallTimeout
      summary: |
        WithReadStallTimeout provides a [option.ClientOption] that may be passed to [storage.NewClient].
        It enables the client to retry stalled requests when starting a download from
        Cloud Storage. If the timeout elapses with no response from the server, the request
        is automatically retried.
        The timeout is initially set to ReadStallTimeoutConfig.Min. The client tracks
        latency across all read requests from the client for each bucket accessed, and can
        adjust the timeout higher to the target percentile when latency for request to that
        bucket is high.
        Currently, this is supported only for downloads ([storage.NewReader] and
        [storage.NewRangeReader] calls) and only for the XML API. Other read APIs (gRPC & JSON)
        will be supported soon.
      parent: cloud.google.com/go/storage/experimental
      type: function
      langs:
        - go
      syntax:
        content: func WithReadStallTimeout(rstc *<a href="#cloud_google_com_go_storage_experimental_ReadStallTimeoutConfig">ReadStallTimeoutConfig</a>) <a href="https://pkg.go.dev/google.golang.org/api/option">option</a>.<a href="https://pkg.go.dev/google.golang.org/api/option#ClientOption">ClientOption</a>
